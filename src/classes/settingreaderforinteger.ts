import { SettingReader } from './settingreader';

export class SettingReaderForInteger extends SettingReader<number> {

    static regex = /^[+-]?[0-9]+$/

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    // Function:    convertRawValueToUsableValue
    //
    // Description: Convert raw string input value into output value in desired datatype.
    //
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    convertRawValueToUsableValue(rawValue: string): number {
        rawValue = this.normalizeTrim(rawValue);

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Convert to int
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        let value: number;
        try {
            if (!SettingReaderForInteger.regex.test(rawValue)) throw 'invalid';
            value = parseInt(rawValue);
            if (isNaN(value)) throw 'invalid';
        }
        catch (e) {
            this.invalidValueError(`Expecting valid integer (e.g. +735).`);
        }

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Validate constraints before returning
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        this.validateValueConstraints(value);
        return value;
    }
}